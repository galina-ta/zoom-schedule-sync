//fun zoomAuthorize(): ZoomAccessToken {
//    println("https://zoom.us/oauth/authorize?response_type=code&client_id=$clientId&redirect_uri=$redirectUrl")
//    val scanner = Scanner(System.`in`)
//    val code = scanner.next()
//
//    val authorizer = ZoomAuthorizerGetOAuthToken(clientId, clientSecret)
//    val za = ZoomAPI(authorizer)
//
//    return za.requestAccessToken(code, redirectUrl)
//}

//    var oauthToken = zoomAuthorize()
//
//    val authorizer = object : ZoomAuthorizerOAuth(clientId, clientSecret, oauthToken) {
//        override fun onNewToken(tkn: ZoomAccessToken) {
//            oauthToken = tkn
//        }
//    }
//    val za = ZoomAPI(authorizer)
//    val meetingRequest = ZoomMeetingRequest.requestDefaults("Test Meeting", "Let's talk about the weather")
//    meetingRequest.start_time =
//    meetingRequest.timezone = timeZone
//    val meeting = za.createMeeting("me", meetingRequest)
//    println(meeting)

//private const val redirectUrl = "https://galina-ta.com/callback"
//private const val clientId = "JyMzgbbLTNCMGLiUK3TWSg"
//private const val clientSecret = "sq6x3syad5bVSdQhOoSQPeWaoopoErSM"

//implementation("com.salesboxai.zoom:zoom-api:0.3.0")